# cd .ssh
# ssh-keygen -t ed25519 -f "/root/.ssh/github-actions" -C "github-actions"
# Add generated .pub to auth keys
# nano authorized_keys
# Add private key to GitHub repo secrets - $SSH_PRIVATE_KEY

# PM2
# pm2 start pnpm --name 2block -- start --port=3000
# pm2 save
# pm2 startup
# create .next folder in project root
# create .env (github actions should create or replace it)
# npm i or pnpm install?

# allow port 5432 on hetzner firewall

# If using NVM to manage node versions
# If changing node version, remove old symlinks and create new ones: sudo rm -f /usr/local/bin/node /usr/local/bin/npm /usr/local/bin/pnpm /usr/local/bin/pm2
# sudo ln -s "$NVM_DIR/versions/node/$(nvm version)/bin/node" "/usr/local/bin/node"
# sudo ln -s "$NVM_DIR/versions/node/$(nvm version)/bin/npm" "/usr/local/bin/npm"

# npm install -g pnpm pm2
# sudo ln -s "$NVM_DIR/versions/node/$(nvm version)/bin/pnpm" "/usr/local/bin/pnpm"
# sudo ln -s "$NVM_DIR/versions/node/$(nvm version)/bin/pm2" "/usr/local/bin/pm2"

name: Build and Deploy 2BLOCK App

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    # runs-on: self-hosted
    strategy:
      matrix:
        node-version: [v20.16]
    env:
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      USER: root
      HOST: ${{ vars.SERVER_IP }}
      APP_DIR: "/root/create-2block-app"
      PM2_APP_NAME: "2block"
    steps:
      - name: Checkout main branch
        uses: actions/checkout@main

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.7.1

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4.0.3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      # change NEXT_PUBLIC_APP_URL to {{ vars.NEXT_PUBLIC_APP_URL }}
      - name: Create and Update .env file (NEXT_PUBLIC_APP_URL)
        run: |
          echo "${{ secrets.ENV_PROD }}" > .env

          echo "Original NEXT_PUBLIC_APP_URL value:"
          grep '^NEXT_PUBLIC_APP_URL=' .env || echo "NEXT_PUBLIC_APP_URL not found in original .env"

          sed -i "s#NEXT_PUBLIC_APP_URL=.*#NEXT_PUBLIC_APP_URL=${{ vars.NEXT_PUBLIC_APP_URL }}#" .env
          sed -i "s#NEXT_PUBLIC_APP_URL='.*'#NEXT_PUBLIC_APP_URL='${{ vars.NEXT_PUBLIC_APP_URL }}'#" .env
                    
          echo "Updated NEXT_PUBLIC_APP_URL value:"
          grep '^NEXT_PUBLIC_APP_URL=' .env || echo "NEXT_PUBLIC_APP_URL not found in updated .env"

      # - name: Turborepo Remote Cache Server
      #   uses: trappar/turborepo-remote-cache-gh-action@v2
      #   with:
      #     storage-provider: s3
      #     storage-path: turborepo-cache
      #   env:
      #     AWS_REGION: "auto"
      #     AWS_ACCESS_KEY_ID: ${{ secrets.S3_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.S3_SECRET_ACCESS_KEY }}
      #     AWS_ENDPOINT: ${{ secrets.S3_ENDPOINT }}

      - name: Install dependencies
        run: pnpm install
    
      - name: Turborepo Build
        run: pnpm run build
  
      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/github-action
          chmod 600 ~/.ssh/github-action
          echo -e "Host vps\n\tUser $USER\n\tHostname $HOST\n\tIdentityFile ~/.ssh/github-action\n\tStrictHostKeyChecking No" > ~/.ssh/config

      - name: Deploy to server
        run: |
          echo "${{ secrets.ENV_PROD }}" > .env
          scp .env vps:$APP_DIR/.env
          ssh vps "cd $APP_DIR && git pull && pnpm install && pnpm run build"
          ssh vps "cd $APP_DIR/apps/nextjs && pm2 restart $PM2_APP_NAME"
          ssh vps "cd $APP_DIR/apps/nextjs && pnpm run generate-routes && pnpm run purge-cache"
